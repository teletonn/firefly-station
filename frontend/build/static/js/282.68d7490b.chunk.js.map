{"version":3,"file":"static/js/282.68d7490b.chunk.js","mappings":"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","sources":["components/UserGroups.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GlassCard from './ui/GlassCard';\nimport GlassButton from './ui/GlassButton';\n\nconst UserGroups = () => {\n  const [groups, setGroups] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [activeTab, setActiveTab] = useState('groups');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    parent_group_id: ''\n  });\n\n  // Fetch groups and users on component mount\n  useEffect(() => {\n    fetchGroups();\n    fetchUsers();\n  }, []);\n\n  const fetchGroups = async () => {\n    try {\n      const response = await fetch('/api/users/groups');\n      const data = await response.json();\n      setGroups(data.groups || []);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('/api/users/');\n      const data = await response.json();\n      setUsers(data.users || []);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  const handleCreateGroup = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/users/groups', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        setShowCreateModal(false);\n        setFormData({ name: '', description: '' });\n        fetchGroups();\n      }\n    } catch (error) {\n      console.error('Error creating group:', error);\n    }\n  };\n\n  const handleEditGroup = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/users/groups/${selectedGroup.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        setShowEditModal(false);\n        setSelectedGroup(null);\n        setFormData({ name: '', description: '' });\n        fetchGroups();\n      }\n    } catch (error) {\n      console.error('Error updating group:', error);\n    }\n  };\n\n  const handleDeleteGroup = async (groupId) => {\n    // For now, we'll just delete without confirmation\n    // In a real app, you'd show a proper confirmation dialog\n    try {\n      const response = await fetch(`/api/users/groups/${groupId}`, {\n        method: 'DELETE',\n      });\n\n      if (response.ok) {\n        fetchGroups();\n      }\n    } catch (error) {\n      console.error('Error deleting group:', error);\n    }\n  };\n\n  const handleAddUserToGroup = async (userId, groupId) => {\n    try {\n      const response = await fetch(`/api/users/groups/${groupId}/users/${userId}`, {\n        method: 'POST',\n      });\n\n      if (response.ok) {\n        fetchGroups();\n      }\n    } catch (error) {\n      console.error('Error adding user to group:', error);\n    }\n  };\n\n  const handleRemoveUserFromGroup = async (userId, groupId) => {\n    try {\n      const response = await fetch(`/api/users/groups/${groupId}/users/${userId}`, {\n        method: 'DELETE',\n      });\n\n      if (response.ok) {\n        fetchGroups();\n      }\n    } catch (error) {\n      console.error('Error removing user from group:', error);\n    }\n  };\n\n  const openEditModal = (group) => {\n    setSelectedGroup(group);\n    setFormData({\n      name: group.name,\n      description: group.description || ''\n    });\n    setShowEditModal(true);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-accent-cyan\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Tabs */}\n      <div className=\"flex space-x-1 bg-dark-800/50 p-1 rounded-lg\">\n        {[\n          { id: 'groups', label: 'Groups' },\n          { id: 'hierarchy', label: 'Hierarchy' }\n        ].map((tab) => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n              activeTab === tab.id\n                ? 'bg-accent-cyan text-dark-900'\n                : 'text-gray-300 hover:text-white'\n            }`}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-xl font-bold text-white\">\n          {activeTab === 'hierarchy' ? 'Group Hierarchy' : 'User Groups'}\n        </h2>\n        <GlassButton\n          onClick={() => setShowCreateModal(true)}\n          variant=\"primary\"\n          className=\"flex items-center space-x-2\"\n        >\n          <span>+</span>\n          <span>Create Group</span>\n        </GlassButton>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Groups List */}\n        <GlassCard title=\"Groups\" icon={<GroupsIcon />}>\n          <div className=\"space-y-3\">\n            {groups.map((group) => (\n              <div\n                key={group.id}\n                className=\"p-4 bg-dark-800/50 rounded-lg border border-dark-600 hover:border-accent-cyan/50 transition-colors cursor-pointer\"\n                onClick={() => setSelectedGroup(group)}\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"font-semibold text-white\">{group.name}</h3>\n                    <p className=\"text-sm text-gray-300 mt-1\">{group.description}</p>\n                    <p className=\"text-xs text-gray-400 mt-2\">\n                      Created: {new Date(group.created_at).toLocaleDateString()}\n                    </p>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        openEditModal(group);\n                      }}\n                      className=\"text-accent-cyan hover:text-accent-cyan/80 text-sm\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDeleteGroup(group.id);\n                      }}\n                      className=\"text-red-400 hover:text-red-300 text-sm\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {groups.length === 0 && (\n              <p className=\"text-gray-400 text-center py-8\">No groups created yet</p>\n            )}\n          </div>\n        </GlassCard>\n\n        {/* Group Details */}\n        <GlassCard\n          title={selectedGroup ? selectedGroup.name : \"Select a Group\"}\n          icon={selectedGroup ? <GroupDetailIcon /> : <SelectIcon />}\n        >\n          {selectedGroup ? (\n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-semibold text-white mb-2\">Group Information</h4>\n                <p className=\"text-gray-300\">{selectedGroup.description}</p>\n              </div>\n\n              <div>\n                <h4 className=\"font-semibold text-white mb-2\">Users in Group</h4>\n                <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                  {selectedGroup.users && selectedGroup.users.length > 0 ? (\n                    selectedGroup.users.map((user) => (\n                      <div\n                        key={user.id}\n                        className=\"flex justify-between items-center p-2 bg-dark-800/30 rounded\"\n                      >\n                        <div>\n                          <span className=\"text-white\">{user.long_name || user.short_name}</span>\n                          <span className=\"text-gray-400 text-sm ml-2\">({user.id})</span>\n                        </div>\n                        <button\n                          onClick={() => handleRemoveUserFromGroup(user.id, selectedGroup.id)}\n                          className=\"text-red-400 hover:text-red-300 text-sm\"\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    ))\n                  ) : (\n                    <p className=\"text-gray-400 text-sm\">No users in this group</p>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <h4 className=\"font-semibold text-white mb-2\">Add Users</h4>\n                <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                  {users\n                    .filter(user =>\n                      !selectedGroup.users ||\n                      !selectedGroup.users.some(groupUser => groupUser.id === user.id)\n                    )\n                    .map((user) => (\n                      <div\n                        key={user.id}\n                        className=\"flex justify-between items-center p-2 bg-dark-800/30 rounded\"\n                      >\n                        <span className=\"text-gray-300\">{user.long_name || user.short_name}</span>\n                        <button\n                          onClick={() => handleAddUserToGroup(user.id, selectedGroup.id)}\n                          className=\"text-green-400 hover:text-green-300 text-sm\"\n                        >\n                          Add\n                        </button>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n          ) : (\n            <p className=\"text-gray-400 text-center py-8\">\n              Select a group to view details and manage users\n            </p>\n          )}\n        </GlassCard>\n      </div>\n\n      {/* Hierarchy Tab */}\n      {activeTab === 'hierarchy' && (\n        <GlassCard title=\"Group Hierarchy\" icon={<HierarchyIcon />}>\n          <div className=\"space-y-4\">\n            {groups.length > 0 ? (\n              <div className=\"space-y-4\">\n                {/* Root level groups */}\n                {groups.filter(group => !group.parent_group_id).map((rootGroup) => (\n                  <div key={rootGroup.id} className=\"border border-dark-600 rounded-lg p-4\">\n                    <GroupNode\n                      group={rootGroup}\n                      groups={groups}\n                      users={users}\n                      onEdit={openEditModal}\n                      onDelete={handleDeleteGroup}\n                      onAddUser={handleAddUserToGroup}\n                      onRemoveUser={handleRemoveUserFromGroup}\n                      level={0}\n                    />\n                  </div>\n                ))}\n\n                {/* Orphaned groups (with missing parents) */}\n                {groups.filter(group => group.parent_group_id && !groups.find(g => g.id === group.parent_group_id)).map((orphanedGroup) => (\n                  <div key={orphanedGroup.id} className=\"border border-yellow-600/30 rounded-lg p-4 bg-yellow-900/10\">\n                    <GroupNode\n                      group={orphanedGroup}\n                      groups={groups}\n                      users={users}\n                      onEdit={openEditModal}\n                      onDelete={handleDeleteGroup}\n                      onAddUser={handleAddUserToGroup}\n                      onRemoveUser={handleRemoveUserFromGroup}\n                      level={0}\n                      isOrphaned={true}\n                    />\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-gray-400 text-center py-8\">No groups created yet</p>\n            )}\n          </div>\n        </GlassCard>\n      )}\n\n      {/* Create Group Modal */}\n      {showCreateModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <GlassCard className=\"w-full max-w-md mx-4\">\n            <form onSubmit={handleCreateGroup}>\n              <h2 className=\"text-xl font-bold text-white mb-4\">Create New Group</h2>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Group Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-3 py-2 bg-dark-800 border border-dark-600 rounded-lg text-white focus:border-accent-cyan focus:outline-none\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Description\n                  </label>\n                  <textarea\n                    value={formData.description}\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                    rows={3}\n                    className=\"w-full px-3 py-2 bg-dark-800 border border-dark-600 rounded-lg text-white focus:border-accent-cyan focus:outline-none\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Parent Group (optional)\n                  </label>\n                  <select\n                    value={formData.parent_group_id}\n                    onChange={(e) => setFormData({ ...formData, parent_group_id: e.target.value })}\n                    className=\"w-full px-3 py-2 bg-dark-800 border border-dark-600 rounded-lg text-white focus:border-accent-cyan focus:outline-none\"\n                  >\n                    <option value=\"\">No Parent (Root Group)</option>\n                    {groups\n                      .filter(group => group.id !== selectedGroup?.id) // Prevent self-selection\n                      .map((group) => (\n                        <option key={group.id} value={group.id}>{group.name}</option>\n                      ))}\n                  </select>\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    Select a parent group to create a subgroup\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <GlassButton type=\"submit\" variant=\"primary\">\n                  Create Group\n                </GlassButton>\n                <GlassButton\n                  type=\"button\"\n                  variant=\"secondary\"\n                  onClick={() => setShowCreateModal(false)}\n                >\n                  Cancel\n                </GlassButton>\n              </div>\n            </form>\n          </GlassCard>\n        </div>\n      )}\n\n      {/* Edit Group Modal */}\n      {showEditModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <GlassCard className=\"w-full max-w-md mx-4\">\n            <form onSubmit={handleEditGroup}>\n              <h2 className=\"text-xl font-bold text-white mb-4\">Edit Group</h2>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Group Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-3 py-2 bg-dark-800 border border-dark-600 rounded-lg text-white focus:border-accent-cyan focus:outline-none\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Description\n                  </label>\n                  <textarea\n                    value={formData.description}\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                    rows={3}\n                    className=\"w-full px-3 py-2 bg-dark-800 border border-dark-600 rounded-lg text-white focus:border-accent-cyan focus:outline-none\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <GlassButton type=\"submit\" variant=\"primary\">\n                  Update Group\n                </GlassButton>\n                <GlassButton\n                  type=\"button\"\n                  variant=\"secondary\"\n                  onClick={() => setShowEditModal(false)}\n                >\n                  Cancel\n                </GlassButton>\n              </div>\n            </form>\n          </GlassCard>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// GroupNode Component for Hierarchy View\nconst GroupNode = ({\n  group,\n  groups,\n  users,\n  onEdit,\n  onDelete,\n  onAddUser,\n  onRemoveUser,\n  level = 0,\n  isOrphaned = false\n}) => {\n  const childGroups = groups.filter(g => g.parent_group_id === group.id);\n  const usersInGroup = users.filter(user =>\n    group.users && group.users.some(groupUser => groupUser.id === user.id)\n  );\n\n  return (\n    <div className={`${level > 0 ? 'ml-6 border-l border-dark-600 pl-4' : ''}`}>\n      <div className=\"flex items-start justify-between p-3 bg-dark-800/30 rounded\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center space-x-2\">\n            <h4 className=\"font-semibold text-white\">{group.name}</h4>\n            {isOrphaned && (\n              <span className=\"px-2 py-1 bg-yellow-600/20 text-yellow-400 text-xs rounded\">\n                Orphaned\n              </span>\n            )}\n            <span className=\"text-xs text-gray-400\">\n              ({usersInGroup.length} users)\n            </span>\n          </div>\n          {group.description && (\n            <p className=\"text-sm text-gray-300 mt-1\">{group.description}</p>\n          )}\n          <div className=\"flex items-center space-x-4 mt-2 text-xs text-gray-400\">\n            <span>Created: {new Date(group.created_at).toLocaleDateString()}</span>\n            {group.parent_group_id && (\n              <span>Parent: {groups.find(g => g.id === group.parent_group_id)?.name || 'Unknown'}</span>\n            )}\n          </div>\n        </div>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={() => onEdit(group)}\n            className=\"text-accent-cyan hover:text-accent-cyan/80 text-sm\"\n          >\n            Edit\n          </button>\n          <button\n            onClick={() => onDelete(group.id)}\n            className=\"text-red-400 hover:text-red-300 text-sm\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n\n      {/* Child groups */}\n      {childGroups.map((childGroup) => (\n        <GroupNode\n          key={childGroup.id}\n          group={childGroup}\n          groups={groups}\n          users={users}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onAddUser={onAddUser}\n          onRemoveUser={onRemoveUser}\n          level={level + 1}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Icon Components\nconst GroupsIcon = () => (\n  <svg className=\"w-6 h-6 text-accent-cyan\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n  </svg>\n);\n\nconst GroupDetailIcon = () => (\n  <svg className=\"w-6 h-6 text-accent-cyan\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n  </svg>\n);\n\nconst SelectIcon = () => (\n  <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\n  </svg>\n);\n\nconst HierarchyIcon = () => (\n  <svg className=\"w-6 h-6 text-accent-cyan\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v2H8V5z\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 13l-3-3m0 0l-3 3m3-3v6\" />\n  </svg>\n);\n\nexport default UserGroups;"],"names":["GroupNode","_ref","_groups$find","group","groups","users","onEdit","onDelete","onAddUser","onRemoveUser","level","isOrphaned","childGroups","filter","g","parent_group_id","id","usersInGroup","user","some","groupUser","_jsxs","className","concat","children","_jsx","name","length","description","Date","created_at","toLocaleDateString","find","onClick","map","childGroup","GroupsIcon","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","GroupDetailIcon","SelectIcon","HierarchyIcon","UserGroups","setGroups","useState","setUsers","selectedGroup","setSelectedGroup","activeTab","setActiveTab","showCreateModal","setShowCreateModal","showEditModal","setShowEditModal","loading","setLoading","formData","setFormData","useEffect","fetchGroups","fetchUsers","async","response","fetch","data","json","error","console","handleDeleteGroup","groupId","method","ok","handleAddUserToGroup","userId","handleRemoveUserFromGroup","openEditModal","label","tab","GlassButton","variant","GlassCard","title","icon","e","stopPropagation","long_name","short_name","rootGroup","orphanedGroup","onSubmit","preventDefault","headers","body","JSON","stringify","type","value","onChange","_objectSpread","target","required","rows"],"sourceRoot":""}