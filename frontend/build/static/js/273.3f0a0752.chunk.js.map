{"version":3,"file":"static/js/273.3f0a0752.chunk.js","mappings":"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","sources":["components/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport GlassCard from './ui/GlassCard';\nimport GlassButton from './ui/GlassButton';\nimport axios from 'axios';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  AreaChart,\n  Area\n} from 'recharts';\nimport {\n  TrendingUp,\n  TrendingDown,\n  Users,\n  MessageSquare,\n  AlertTriangle,\n  MapPin,\n  Bot,\n  Activity,\n  Download,\n  RefreshCw\n} from 'lucide-react';\n\n// Chart colors constant\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#06b6d4'];\n\nconst Analytics = () => {\n  const { t } = useTranslation();\n  const { isConnected, subscribe } = useWebSocket();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [period, setPeriod] = useState('7d');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState({\n    overview: {},\n    users: {},\n    messages: {},\n    alerts: {},\n    geolocation: {},\n    performance: {}\n  });\n\n  useEffect(() => {\n    fetchAnalyticsData();\n  }, [period]);\n\n  // Subscribe to real-time analytics updates\n  useEffect(() => {\n    const unsubscribeAnalyticsUpdate = subscribe('analytics_update', (message) => {\n      if (message.data.analytics_data) {\n        setData(prev => ({\n          ...prev,\n          ...message.data.analytics_data\n        }));\n      }\n    });\n\n    const unsubscribeStatsUpdate = subscribe('statistics_update', (message) => {\n      if (message.data.analytics_stats) {\n        setData(prev => ({\n          ...prev,\n          ...message.data.analytics_stats\n        }));\n      }\n    });\n\n    return () => {\n      unsubscribeAnalyticsUpdate();\n      unsubscribeStatsUpdate();\n    };\n  }, [subscribe]);\n\n  const fetchAnalyticsData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const endpoints = [\n        'dashboard/overview',\n        `users/analytics?period=${period}`,\n        `messages/analytics?period=${period}`,\n        `alerts/analytics?period=${period}`,\n        `geolocation/analytics?period=${period}`,\n        `performance/metrics?period=${period.replace('d', '')}d`\n      ];\n\n      const responses = await Promise.all(\n        endpoints.map(endpoint => axios.get(`/api/analytics/${endpoint}`))\n      );\n\n      const results = responses.map(response => response.data);\n\n      setData({\n        overview: results[0],\n        users: results[1],\n        messages: results[2],\n        alerts: results[3],\n        geolocation: results[4],\n        performance: results[5]\n      });\n    } catch (error) {\n      console.error('Error fetching analytics data:', error);\n      setError('Failed to load analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateReport = async () => {\n    try {\n      const response = await axios.get(`/api/analytics/reports/generate?report_type=daily`);\n      const reportData = response.data;\n\n      // Create and download JSON report\n      const blob = new Blob([JSON.stringify(reportData, null, 2)], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `analytics-report-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error generating report:', error);\n    }\n  };\n\n  const tabs = [\n    { id: 'overview', label: t('analytics.overview'), icon: Activity },\n    { id: 'users', label: t('analytics.users'), icon: Users },\n    { id: 'messages', label: t('analytics.messages'), icon: MessageSquare },\n    { id: 'alerts', label: t('analytics.alerts'), icon: AlertTriangle },\n    { id: 'geolocation', label: t('analytics.geolocation'), icon: MapPin },\n    { id: 'performance', label: t('analytics.performance'), icon: Bot }\n  ];\n\n  const periodOptions = [\n    { value: '1h', label: t('analytics.last_hour') },\n    { value: '24h', label: t('analytics.last_24_hours') },\n    { value: '7d', label: t('analytics.last_7_days') },\n    { value: '30d', label: t('analytics.last_30_days') },\n    { value: '90d', label: t('analytics.last_90_days') }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-accent-cyan\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-900/20 border border-red-500/50 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <svg className=\"w-5 h-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span className=\"text-red-400 font-medium\">Error</span>\n            </div>\n            <GlassButton\n              onClick={() => {\n                setError(null);\n                fetchAnalyticsData();\n              }}\n              variant=\"secondary\"\n              className=\"text-sm\"\n            >\n              Retry\n            </GlassButton>\n          </div>\n          <p className=\"text-red-300 mt-2\">{error}</p>\n        </div>\n      )}\n\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-white\">{t('analytics.title')}</h1>\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-400' : 'bg-red-400'}`}></div>\n            <span className=\"text-sm text-gray-400\">\n              {isConnected ? t('analytics.live_data') : t('analytics.offline')}\n            </span>\n          </div>\n          <select\n            value={period}\n            onChange={(e) => setPeriod(e.target.value)}\n            className=\"px-3 py-2 bg-dark-800 border border-dark-600 rounded-lg text-white focus:border-accent-cyan focus:outline-none\"\n          >\n            {periodOptions.map(option => (\n              <option key={option.value} value={option.value}>{option.label}</option>\n            ))}\n          </select>\n          <GlassButton onClick={fetchAnalyticsData} variant=\"ghost\" size=\"sm\">\n            <RefreshCw className=\"w-4 h-4\" />\n          </GlassButton>\n          <GlassButton onClick={generateReport} variant=\"primary\" size=\"sm\">\n            <Download className=\"w-4 h-4 mr-2\" />\n            {t('analytics.export_report')}\n          </GlassButton>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex space-x-1 bg-dark-800/50 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex items-center space-x-2 flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n                activeTab === tab.id\n                  ? 'bg-accent-cyan text-dark-900'\n                  : 'text-gray-300 hover:text-white'\n              }`}\n            >\n              <Icon className=\"w-4 h-4\" />\n              <span>{tab.label}</span>\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Content */}\n      <div className=\"space-y-6\">\n        {activeTab === 'overview' && <OverviewTab data={data.overview} />}\n        {activeTab === 'users' && <UsersTab data={data.users} />}\n        {activeTab === 'messages' && <MessagesTab data={data.messages} />}\n        {activeTab === 'alerts' && <AlertsTab data={data.alerts} />}\n        {activeTab === 'geolocation' && <GeolocationTab data={data.geolocation} />}\n        {activeTab === 'performance' && <PerformanceTab data={data.performance} />}\n      </div>\n    </div>\n  );\n};\n\n// Overview Tab Component\nconst OverviewTab = ({ data }) => {\n  const { t } = useTranslation();\n  const overviewData = data || {};\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <MetricCard\n          title={t('analytics.total_users')}\n          value={overviewData.users?.total || 0}\n          change={overviewData.users?.trend}\n          icon={Users}\n          color=\"blue\"\n        />\n        <MetricCard\n          title={t('analytics.messages_today')}\n          value={overviewData.messages?.total_today || 0}\n          change={overviewData.messages?.trend}\n          icon={MessageSquare}\n          color=\"green\"\n        />\n        <MetricCard\n          title={t('analytics.active_alerts')}\n          value={overviewData.alerts?.total_active || 0}\n          change={overviewData.alerts?.trend}\n          icon={AlertTriangle}\n          color=\"red\"\n        />\n        <MetricCard\n          title={t('analytics.active_zones')}\n          value={overviewData.zones?.active || 0}\n          icon={MapPin}\n          color=\"purple\"\n        />\n      </div>\n\n      {/* Charts Row */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <GlassCard title={t('analytics.user_activity_trends')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <AreaChart data={overviewData.userActivityTrends || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"date\" stroke=\"#9ca3af\" />\n              <YAxis stroke=\"#9ca3af\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1f2937',\n                  border: '1px solid #374151',\n                  borderRadius: '8px'\n                }}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"active_users\"\n                stroke=\"#3b82f6\"\n                fill=\"#3b82f6\"\n                fillOpacity={0.3}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </GlassCard>\n\n        <GlassCard title={t('analytics.alert_distribution')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={[\n                  { name: t('analytics.low'), value: overviewData.alerts?.by_severity?.low || 0 },\n                  { name: t('analytics.medium'), value: overviewData.alerts?.by_severity?.medium || 0 },\n                  { name: t('analytics.high'), value: overviewData.alerts?.by_severity?.high || 0 },\n                  { name: t('analytics.critical'), value: overviewData.alerts?.by_severity?.critical || 0 }\n                ]}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={80}\n                dataKey=\"value\"\n                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n              >\n                {[\n                  { name: 'Low', value: overviewData.alerts?.by_severity?.low || 0 },\n                  { name: 'Medium', value: overviewData.alerts?.by_severity?.medium || 0 },\n                  { name: 'High', value: overviewData.alerts?.by_severity?.high || 0 },\n                  { name: 'Critical', value: overviewData.alerts?.by_severity?.critical || 0 }\n                ].map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        </GlassCard>\n      </div>\n    </div>\n  );\n};\n\n// Users Tab Component\nconst UsersTab = ({ data }) => {\n  const { t } = useTranslation();\n  const userData = data || {};\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <GlassCard title={t('analytics.user_registration_trends')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={userData.registration_trends || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"date\" stroke=\"#9ca3af\" />\n              <YAxis stroke=\"#9ca3af\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1f2937',\n                  border: '1px solid #374151',\n                  borderRadius: '8px'\n                }}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"count\"\n                stroke=\"#10b981\"\n                strokeWidth={2}\n                dot={{ fill: '#10b981' }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </GlassCard>\n\n        <GlassCard title={t('analytics.user_activity_patterns')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={userData.activity_patterns || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"hour\" stroke=\"#9ca3af\" />\n              <YAxis stroke=\"#9ca3af\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1f2937',\n                  border: '1px solid #374151',\n                  borderRadius: '8px'\n                }}\n              />\n              <Bar dataKey=\"activity_count\" fill=\"#3b82f6\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </GlassCard>\n      </div>\n\n      <GlassCard title={t('analytics.device_statistics')}>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          {Object.entries(userData.device_stats || {}).map(([device, count]) => (\n            <div key={device} className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">{count}</div>\n              <div className=\"text-sm text-gray-400 capitalize\">{device}</div>\n            </div>\n          ))}\n        </div>\n      </GlassCard>\n    </div>\n  );\n};\n\n// Messages Tab Component\nconst MessagesTab = ({ data }) => {\n  const { t } = useTranslation();\n  const messageData = data || {};\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <GlassCard title={t('analytics.message_volume_trends')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <AreaChart data={messageData.volume_trends || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"date\" stroke=\"#9ca3af\" />\n              <YAxis stroke=\"#9ca3af\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1f2937',\n                  border: '1px solid #374151',\n                  borderRadius: '8px'\n                }}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"count\"\n                stroke=\"#f59e0b\"\n                fill=\"#f59e0b\"\n                fillOpacity={0.3}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </GlassCard>\n\n        <GlassCard title={t('analytics.message_types_distribution')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={Object.entries(messageData.type_distribution || {}).map(([type, count]) => ({\n                  name: type,\n                  value: count\n                }))}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={80}\n                dataKey=\"value\"\n                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n              >\n                {Object.entries(messageData.type_distribution || {}).map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        </GlassCard>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <GlassCard className=\"text-center\">\n          <div className=\"text-2xl font-bold text-white\">\n            {messageData.response_times?.avg_response_time?.toFixed(0) || 0}ms\n          </div>\n          <div className=\"text-sm text-gray-400\">{t('analytics.avg_response_time')}</div>\n        </GlassCard>\n\n        <GlassCard className=\"text-center\">\n          <div className=\"text-2xl font-bold text-white\">\n            {messageData.bot_quality?.success_rate?.toFixed(1) || 0}%\n          </div>\n          <div className=\"text-sm text-gray-400\">{t('analytics.bot_success_rate')}</div>\n        </GlassCard>\n\n        <GlassCard className=\"text-center\">\n          <div className=\"text-2xl font-bold text-white\">\n            {messageData.bot_quality?.total_interactions || 0}\n          </div>\n          <div className=\"text-sm text-gray-400\">{t('analytics.bot_interactions')}</div>\n        </GlassCard>\n      </div>\n    </div>\n  );\n};\n\n// Alerts Tab Component\nconst AlertsTab = ({ data }) => {\n  const { t } = useTranslation();\n  const alertData = data || {};\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <GlassCard title={t('analytics.alert_trends')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={alertData.alert_trends || []}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"date\" stroke=\"#9ca3af\" />\n              <YAxis stroke=\"#9ca3af\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1f2937',\n                  border: '1px solid #374151',\n                  borderRadius: '8px'\n                }}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"count\"\n                stroke=\"#ef4444\"\n                strokeWidth={2}\n                dot={{ fill: '#ef4444' }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </GlassCard>\n\n        <GlassCard title={t('analytics.alert_types')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={Object.entries(alertData.type_distribution || {}).map(([type, count]) => ({\n              type: type.replace('_', ' '),\n              count\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"type\" stroke=\"#9ca3af\" />\n              <YAxis stroke=\"#9ca3af\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1f2937',\n                  border: '1px solid #374151',\n                  borderRadius: '8px'\n                }}\n              />\n              <Bar dataKey=\"count\" fill=\"#8b5cf6\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </GlassCard>\n      </div>\n\n      <GlassCard title={t('analytics.zone_based_alerts')}>\n        <div className=\"space-y-3\">\n          {(alertData.zone_alerts || []).map((zone, index) => (\n            <div key={index} className=\"flex justify-between items-center p-3 bg-dark-800/30 rounded-lg\">\n              <span className=\"text-white\">{zone.zone}</span>\n              <span className=\"text-accent-cyan font-semibold\">{zone.count} {t('analytics.alerts')}</span>\n            </div>\n          ))}\n        </div>\n      </GlassCard>\n    </div>\n  );\n};\n\n// Geolocation Tab Component\nconst GeolocationTab = ({ data }) => {\n  const { t } = useTranslation();\n  const geoData = data || {};\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <GlassCard title={t('analytics.movement_patterns')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={(geoData.movement_patterns || []).slice(0, 10)}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n              <XAxis dataKey=\"user_id\" stroke=\"#9ca3af\" />\n              <YAxis stroke=\"#9ca3af\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: '#1f2937',\n                  border: '1px solid #374151',\n                  borderRadius: '8px'\n                }}\n              />\n              <Bar dataKey=\"updates\" fill=\"#06b6d4\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </GlassCard>\n\n        <GlassCard title={t('analytics.speed_distribution')}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={Object.entries(geoData.speed_analysis || {}).map(([speed, count]) => ({\n                  name: speed.replace('_', ' '),\n                  value: count\n                }))}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={80}\n                dataKey=\"value\"\n                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n              >\n                {Object.entries(geoData.speed_analysis || {}).map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        </GlassCard>\n      </div>\n\n      <GlassCard title={t('analytics.zone_dwell_times')}>\n        <div className=\"space-y-3\">\n          {(geoData.dwell_times || []).map((zone, index) => (\n            <div key={index} className=\"flex justify-between items-center p-3 bg-dark-800/30 rounded-lg\">\n              <div>\n                <div className=\"text-white font-medium\">{zone.zone_name}</div>\n                <div className=\"text-sm text-gray-400\">{zone.users} {t('analytics.users')}</div>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-accent-cyan font-semibold\">\n                  {zone.avg_dwell_hours.toFixed(1)}{t('analytics.h_avg')}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </GlassCard>\n    </div>\n  );\n};\n\n// Performance Tab Component\nconst PerformanceTab = ({ data }) => {\n  const { t } = useTranslation();\n  const perfData = data || {};\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <GlassCard className=\"text-center\">\n          <div className=\"text-2xl font-bold text-white\">\n            {perfData.system_performance?.cpu_usage?.toFixed(1) || 0}%\n          </div>\n          <div className=\"text-sm text-gray-400\">{t('analytics.cpu_usage')}</div>\n        </GlassCard>\n\n        <GlassCard className=\"text-center\">\n          <div className=\"text-2xl font-bold text-white\">\n            {perfData.system_performance?.memory_usage?.toFixed(1) || 0}%\n          </div>\n          <div className=\"text-sm text-gray-400\">{t('analytics.memory_usage')}</div>\n        </GlassCard>\n\n        <GlassCard className=\"text-center\">\n          <div className=\"text-2xl font-bold text-white\">\n            {perfData.api_response_times?.avg_response_time?.toFixed(0) || 0}ms\n          </div>\n          <div className=\"text-sm text-gray-400\">{t('analytics.api_response_time')}</div>\n        </GlassCard>\n\n        <GlassCard className=\"text-center\">\n          <div className=\"text-2xl font-bold text-white\">\n            {perfData.websocket_metrics?.active_connections || 0}\n          </div>\n          <div className=\"text-sm text-gray-400\">{t('analytics.active_connections')}</div>\n        </GlassCard>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <GlassCard title={t('analytics.database_performance')}>\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">{t('analytics.query_count')}</span>\n              <span className=\"text-white font-semibold\">{perfData.database_performance?.query_count || 0}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">{t('analytics.avg_query_time')}</span>\n              <span className=\"text-white font-semibold\">{perfData.database_performance?.avg_query_time?.toFixed(1) || 0}ms</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">{t('analytics.slow_queries')}</span>\n              <span className=\"text-white font-semibold\">{perfData.database_performance?.slow_queries || 0}</span>\n            </div>\n          </div>\n        </GlassCard>\n\n        <GlassCard title={t('analytics.websocket_metrics')}>\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">{t('analytics.messages_per_sec')}</span>\n              <span className=\"text-white font-semibold\">{perfData.websocket_metrics?.messages_per_second?.toFixed(1) || 0}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">{t('analytics.connection_drops')}</span>\n              <span className=\"text-white font-semibold\">{perfData.websocket_metrics?.connection_drops || 0}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-400\">{t('analytics.avg_session_duration')}</span>\n              <span className=\"text-white font-semibold\">{((perfData.websocket_metrics?.avg_session_duration || 0) / 60).toFixed(0)}{t('analytics.min')}</span>\n            </div>\n          </div>\n        </GlassCard>\n      </div>\n    </div>\n  );\n};\n\n// Metric Card Component\nconst MetricCard = ({ title, value, change, icon: Icon, color }) => {\n  const { t } = useTranslation();\n  const colorClasses = {\n    blue: 'text-blue-400',\n    green: 'text-green-400',\n    red: 'text-red-400',\n    purple: 'text-purple-400'\n  };\n\n  return (\n    <GlassCard className=\"text-center\">\n      <Icon className={`w-8 h-8 mx-auto mb-2 ${colorClasses[color]}`} />\n      <div className=\"text-2xl font-bold text-white\">{value.toLocaleString()}</div>\n      <div className=\"text-sm text-gray-400\">{title}</div>\n      {change && (\n        <div className={`flex items-center justify-center mt-2 text-xs ${\n          change.direction === 'up' ? 'text-green-400' : change.direction === 'down' ? 'text-red-400' : 'text-gray-400'\n        }`}>\n          {change.direction === 'up' && <TrendingUp className=\"w-3 h-3 mr-1\" />}\n          {change.direction === 'down' && <TrendingDown className=\"w-3 h-3 mr-1\" />}\n          <span>{change.percentage}{t(change.direction === 'up' ? 'analytics.up' : 'analytics.down')}</span>\n        </div>\n      )}\n    </GlassCard>\n  );\n};\n\nexport default Analytics;"],"names":["COLORS","OverviewTab","_ref","_overviewData$users","_overviewData$users2","_overviewData$message","_overviewData$message2","_overviewData$alerts","_overviewData$alerts2","_overviewData$zones","_overviewData$alerts3","_overviewData$alerts4","_overviewData$alerts5","_overviewData$alerts6","_overviewData$alerts7","_overviewData$alerts8","_overviewData$alerts9","_overviewData$alerts0","_overviewData$alerts1","_overviewData$alerts10","_overviewData$alerts11","_overviewData$alerts12","_overviewData$alerts13","_overviewData$alerts14","_overviewData$alerts15","_overviewData$alerts16","data","t","useTranslation","overviewData","_jsxs","className","children","_jsx","MetricCard","title","value","users","total","change","trend","icon","Users","color","messages","total_today","MessageSquare","alerts","total_active","AlertTriangle","zones","active","MapPin","GlassCard","ResponsiveContainer","width","height","AreaChart","userActivityTrends","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","YAxis","Tooltip","contentStyle","backgroundColor","border","borderRadius","Area","type","fill","fillOpacity","PieChart","Pie","name","by_severity","low","medium","high","critical","cx","cy","outerRadius","label","_ref2","percent","concat","toFixed","map","entry","index","Cell","length","UsersTab","_ref3","userData","LineChart","registration_trends","Line","strokeWidth","dot","BarChart","activity_patterns","Bar","Object","entries","device_stats","_ref4","device","count","MessagesTab","_ref5","_messageData$response","_messageData$response2","_messageData$bot_qual","_messageData$bot_qual2","_messageData$bot_qual3","messageData","volume_trends","type_distribution","_ref6","_ref7","response_times","avg_response_time","bot_quality","success_rate","total_interactions","AlertsTab","_ref8","alertData","alert_trends","_ref9","replace","zone_alerts","zone","GeolocationTab","_ref0","geoData","movement_patterns","slice","speed_analysis","_ref1","speed","_ref10","dwell_times","zone_name","avg_dwell_hours","PerformanceTab","_ref11","_perfData$system_perf","_perfData$system_perf2","_perfData$system_perf3","_perfData$system_perf4","_perfData$api_respons","_perfData$api_respons2","_perfData$websocket_m","_perfData$database_pe","_perfData$database_pe2","_perfData$database_pe3","_perfData$database_pe4","_perfData$websocket_m2","_perfData$websocket_m3","_perfData$websocket_m4","_perfData$websocket_m5","perfData","system_performance","cpu_usage","memory_usage","api_response_times","websocket_metrics","active_connections","database_performance","query_count","avg_query_time","slow_queries","messages_per_second","connection_drops","avg_session_duration","_ref12","Icon","blue","green","red","purple","toLocaleString","direction","TrendingUp","TrendingDown","percentage","Analytics","isConnected","subscribe","useWebSocket","activeTab","setActiveTab","useState","period","setPeriod","loading","setLoading","error","setError","setData","overview","geolocation","performance","useEffect","fetchAnalyticsData","unsubscribeAnalyticsUpdate","message","analytics_data","prev","_objectSpread","unsubscribeStatsUpdate","analytics_stats","async","endpoints","results","Promise","all","endpoint","axios","get","response","console","tabs","id","Activity","Bot","periodOptions","viewBox","strokeLinecap","strokeLinejoin","d","GlassButton","onClick","variant","onChange","e","target","option","size","RefreshCw","reportData","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","document","createElement","href","download","Date","toISOString","split","body","appendChild","click","removeChild","revokeObjectURL","Download","tab"],"sourceRoot":""}